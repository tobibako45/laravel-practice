<?php

namespace App;

use App\Scopes\ScopePerson;
use Illuminate\Database\Eloquent\Model;
// グローバルスコープを使うため
use Illuminate\Database\Eloquent\Builder;

class Person extends Model
{

    protected $guarded = array('id');

    // バリデーションルール
    public static $rules = array(
        'name' => 'required',
        'email' => 'email',
        'age' => 'integer|min:0|max:10',
    );


    /**
     * ageの値が20以上のレコードだけ表示
     */
    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        // グローバルスコープ

        // クロージャ版
        // static::addGlobalScope('age', function (Builder $builder){
        //    $builder->where('age', '>', 20);
        // });

        // Scopeクラス版
        static::addGlobalScope(new ScopePerson);
    }



    /**
     * id,name,ageを文字列にまとめて返す
     * @return string
     */
    public function getData(): string
    {
        return $this->id . ':' . $this->name . '(' . $this->age . ')';
    }


    /**
     * @param $query
     * @param $str
     * @return mixed
     */
    public function scopeNameEqual($query, $str)
    {
        return $query->where('name', $str);
    }




    /**
     * ageが〜以上
     * @param $query
     * @param $n
     * @return mixed
     */
    public function scopeAgeGreaterThan($query, $n)
    {
        return $query->where('age', '>=', $n);
    }


    /**
     * ageが〜以下
     * @param $query
     * @param $n
     * @return mixed
     */
    public function scopeAgeLessThan($query, $n)
    {
        return $query->where('age', '<=', $n);
    }






}
